# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2018-03-26 09:47
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    replaces = [('peer_review', '0001_initial'), ('peer_review', '0002_questionorder'), ('peer_review', '0003_questionnaire_questionorders'), ('peer_review', '0004_user_otp'), ('peer_review', '0005_auto_20151202_1026'), ('peer_review', '0006_auto_20151202_1114'), ('peer_review', '0007_auto_20151202_1132'), ('peer_review', '0008_auto_20151202_1202'), ('peer_review', '0009_auto_20160114_1527'), ('peer_review', '0010_auto_20160126_1056'), ('peer_review', '0009_auto_20160125_1248'), ('peer_review', '0011_merge'), ('peer_review', '0012_auto_20160126_1145'), ('peer_review', '0013_auto_20160126_1947'), ('peer_review', '0014_remove_freeformitem_value'), ('peer_review', '0015_auto_20160127_1054'), ('peer_review', '0016_auto_20160127_1114'), ('peer_review', '0017_user_password'), ('peer_review', '0018_auto_20160127_1133'), ('peer_review', '0019_auto_20160128_1010'), ('peer_review', '0018_auto_20160128_0919'), ('peer_review', '0020_merge'), ('peer_review', '0021_auto_20160203_0658'), ('peer_review', '0022_auto_20160203_1022'), ('peer_review', '0023_auto_20160312_1919'), ('peer_review', '0024_auto_20160712_1042'), ('peer_review', '0025_auto_20160713_1343'), ('peer_review', '0025_auto_20160712_0851'), ('peer_review', '0026_merge'), ('peer_review', '0027_response_batchid'), ('peer_review', '0028_auto_20170203_0621'), ('peer_review', '0029_auto_20170307_1459'), ('peer_review', '0030_auto_20170714_0712'), ('peer_review', '0031_auto_20170714_0737'), ('peer_review', '0032_auto_20170714_0818')]

    initial = True

    dependencies = [
        ('auth', '0006_require_contenttypes_0002'),
    ]

    operations = [
        migrations.CreateModel(
            name='Choice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('choiceText', models.CharField(max_length=200)),
                ('num', models.IntegerField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('doc_file', models.FileField(upload_to='documents')),
            ],
        ),
        migrations.CreateModel(
            name='Label',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('labelText', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('questionText', models.CharField(max_length=255)),
                ('pubDate', models.DateTimeField(verbose_name='date published')),
            ],
        ),
        migrations.CreateModel(
            name='QuestionGrouping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grouping', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Questionnaire',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('intro', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='QuestionType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Rank',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firstWord', models.CharField(max_length=200)),
                ('secondWord', models.CharField(max_length=200)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='peer_review.Question')),
            ],
        ),
        migrations.CreateModel(
            name='Rate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('optional', models.BooleanField(default=False)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='peer_review.Question')),
                ('bottomWord', models.CharField(default='peasant', max_length=25)),
                ('topWord', models.CharField(default='christopher', max_length=25)),
            ],
        ),
        migrations.CreateModel(
            name='RoundDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('startingDate', models.DateTimeField(verbose_name='starting date')),
                ('endingDate', models.DateTimeField(verbose_name='ending date')),
                ('description', models.CharField(max_length=200)),
                ('questionnaire', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='peer_review.Questionnaire')),
            ],
        ),
        migrations.CreateModel(
            name='TeamDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('NA', 'Not attempted'), ('IP', 'In progress'), ('C', 'Completed')], default='NA', max_length=20)),
                ('roundDetail', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='peer_review.RoundDetail')),
                ('teamName', models.CharField(default='emptyTeam', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('user_id', models.CharField(max_length=12, primary_key=True, serialize=False)),
                ('status', models.CharField(max_length=1)),
                ('OTP', models.BooleanField(default=True)),
                ('cell', models.CharField(default=0, max_length=10)),
                ('email', models.EmailField(max_length=254)),
                ('initials', models.CharField(default='A', max_length=10)),
                ('name', models.CharField(default='A', max_length=50)),
                ('surname', models.CharField(default='A', max_length=50)),
                ('title', models.CharField(default='A', max_length=4)),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Deselect this instead of deleting accounts.')),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
        ),
        migrations.AddField(
            model_name='question',
            name='questionGrouping',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='peer_review.QuestionGrouping'),
        ),
        migrations.AddField(
            model_name='question',
            name='questionType',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='peer_review.QuestionType'),
        ),
        migrations.AddField(
            model_name='label',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='peer_review.Question'),
        ),
        migrations.AddField(
            model_name='choice',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='peer_review.Question'),
        ),
        migrations.CreateModel(
            name='QuestionOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField(default=1)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='peer_review.Question')),
                ('questionnaire', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='peer_review.Questionnaire')),
            ],
        ),
        migrations.AddField(
            model_name='questionnaire',
            name='questionOrders',
            field=models.ManyToManyField(through='peer_review.QuestionOrder', to='peer_review.Question'),
        ),
        migrations.AddField(
            model_name='question',
            name='questionLabel',
            field=models.CharField(max_length=255, unique=True),
        ),
        migrations.AddField(
            model_name='questionnaire',
            name='label',
            field=models.CharField(max_length=255, unique=True),
        ),
        migrations.AlterField(
            model_name='question',
            name='questionText',
            field=models.CharField(max_length=1000),
        ),
        migrations.AlterField(
            model_name='questionnaire',
            name='intro',
            field=models.CharField(max_length=1000),
        ),
        migrations.CreateModel(
            name='FreeformItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('freeformType', models.CharField(choices=[('Paragraph', 'Paragraph'), ('Word', 'Word'), ('Integer', 'Integer'), ('Real', 'Real')], default='Paragraph', max_length=300)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='peer_review.Question')),
            ],
        ),
        migrations.AddField(
            model_name='rounddetail',
            name='name',
            field=models.CharField(max_length=15, unique=True),
        ),
        migrations.AlterField(
            model_name='rounddetail',
            name='description',
            field=models.CharField(max_length=255),
        ),
        migrations.AlterField(
            model_name='rounddetail',
            name='questionnaire',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='peer_review.Questionnaire'),
        ),
        migrations.AddField(
            model_name='teamdetail',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Response',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.CharField(max_length=255)),
                ('label', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='peer_review.Label')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='peer_review.Question')),
                ('roundDetail', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='peer_review.RoundDetail')),
                ('subjectUser', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='otherUser', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user', to=settings.AUTH_USER_MODEL)),
                ('batch_id', models.IntegerField(default=-1)),
            ],
        ),
        migrations.AlterField(
            model_name='teamdetail',
            name='status',
            field=models.CharField(choices=[('Not attempted', 'Not attempted'), ('In progress', 'In progress'), ('Completed', 'Completed')], default='Not attempted', max_length=20),
        ),
    ]
